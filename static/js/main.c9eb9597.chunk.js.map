{"version":3,"sources":["social-profile/Profile.js","friends/FriendList.js","statistics/Statistics.js","transactions/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","class","src","alt","followers","views","likes","FriendListItem","isOnline","width","FriendList","friends","map","friend","id","StatisticsItem","label","percentage","Statistics","title","stat","defaultProps","TransactionHistoryItem","type","amount","currency","TransactionHistory","items","item","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9eb9597.chunk.js","sourcesContent":["import \"./Profile.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Profile({ name, tag, location, avatar, stats }) {\r\n  return (\r\n    <div class=\"profile\">\r\n      <div class=\"description\">\r\n        <img src={avatar} alt={name} class=\"avatar\" />\r\n        <p class=\"name\">{name}</p>\r\n        <p class=\"tag\">@{tag}</p>\r\n        <p class=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul class=\"stats\">\r\n        <li>\r\n          <span class=\"label\">Followers</span>\r\n          <span class=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span class=\"label\">Views</span>\r\n          <span class=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span class=\"label\">Likes</span>\r\n          <span class=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import \"./FriendList.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction FriendListItem({ avatar, name, isOnline }) {\r\n  return (\r\n    <li class=\"item\">\r\n      <span class=\"status\">{isOnline ? \"Online\" : \"Offline\"}</span>\r\n      <img class=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n      <p class=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul class=\"friend-list\">\r\n      {friends.map((friend) => (\r\n        <FriendListItem\r\n          key={friend.id}\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n          isOnline={friend.isOnline}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import \"./Statistics.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction StatisticsItem({ label, percentage }) {\r\n  return (\r\n    <li class=\"item\">\r\n      <span class=\"label\">{label}</span>\r\n      <span class=\"percentage\">{percentage}%</span>\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction Statistics({ title, stats }) {\r\n  return (\r\n    <section class=\"statistics\">\r\n      <h2 class=\"title\">{title}</h2>\r\n\r\n      <ul class=\"stat-list\">\r\n        {stats.map((stat) => (\r\n          <StatisticsItem\r\n            key={stat.id}\r\n            label={stat.label}\r\n            percentage={stat.percentage}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: \"Default title\",\r\n};\r\n\r\nStatisticsItem.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import \"./TransactionHistory.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TransactionHistoryItem({ type, amount, currency }) {\r\n  return (\r\n    <tr>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table class=\"transaction-history\">\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <TransactionHistoryItem\r\n            key={item.id}\r\n            type={item.type}\r\n            amount={item.amount}\r\n            currency={item.currency}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistoryItem.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.number.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Profile from \"./social-profile/Profile.js\";\nimport user from \"./social-profile/user.json\";\nimport FriendList from \"./friends/FriendList.js\";\nimport friends from \"./friends/friends.json\";\nimport Statistics from \"./statistics/Statistics.js\";\nimport statisticalData from \"./statistics/statistical-data.json\";\nimport TransactionHistory from \"./transactions/TransactionHistory.js\";\nimport transactions from \"./transactions/transactions.json\";\n\nfunction App() {\n  return (\n    <div class=\"app\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <FriendList friends={friends} />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\n/*\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n*/\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}